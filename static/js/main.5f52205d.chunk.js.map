{"version":3,"sources":["components/Carousel.tsx","images.js","App.tsx","index.tsx"],"names":["Carousel","images","step","itemWidth","frameSize","animationDuration","infinite","useState","position","setPosition","lastPosition","length","style","width","className","map","image","transform","transition","src","alt","type","onClick","disabled","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","min","max","value","onChange","e","target","checked","ReactDOM","render","document","getElementById"],"mappings":"mMA2FeA,EA/EmB,SAAC,GAI7B,IAFFC,EAEC,EAFDA,OAAQC,EAEP,EAFOA,KAAMC,EAEb,EAFaA,UAAWC,EAExB,EAFwBA,UAAWC,EAEnC,EAFmCA,kBAAmBC,EAEtD,EAFsDA,SAGzD,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAeT,EAAOU,OAASP,EA0BrC,OACE,sBACEQ,MAAO,CACLC,MAAM,GAAD,OAAKT,EAAYD,EAAjB,OAEPW,UAAU,WAJZ,UAME,oBAAIA,UAAU,iBAAd,SACGb,EAAOc,KAAI,SAAAC,GAAK,OACf,oBAEEF,UAAU,iBACVF,MAAO,CACLK,UAAU,cAAD,QAAiBT,EAAWL,EAA5B,OACTe,WAAW,kBAAD,OAAoBb,EAAoB,IAAxC,MALd,SAQE,qBAAKO,MAAO,CAAEC,MAAM,GAAD,OAAKV,EAAL,OAAsBgB,IAAKH,EAAOI,IAAI,OAPpDJ,QAYX,sBAAKF,UAAU,oBAAf,UACE,wBACEO,KAAK,SACLP,UAAU,eACVQ,QAtCgB,WAEpBb,EADED,EAAWN,EAAO,EACR,EAEAM,EAAWN,GAGrBI,GAAyB,IAAbE,GACdC,EAAYC,IA+BRa,SAAuB,IAAbf,IAAmBF,EAJ/B,kBASA,wBACEe,KAAK,SACL,UAAQ,OACRP,UAAU,eACVQ,QA5DgB,WAEpBb,EADED,EAAWN,EAAOQ,EACRF,EAAWN,EAEXQ,GAGVJ,GAAYE,IAAaE,GAC3BD,EAAY,IAqDRc,SAAUf,IAAaE,IAAiBJ,EAL1C,yBC5EKL,EAAS,CACpB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBCLWuB,EAAM,WACjB,MAAwBjB,mBAAS,GAAjC,mBAAOL,EAAP,KAAauB,EAAb,KACA,EAAkClB,mBAAS,GAA3C,mBAAOH,EAAP,KAAkBsB,EAAlB,KACA,EAAkCnB,mBAAS,KAA3C,mBAAOJ,EAAP,KAAkBwB,EAAlB,KACA,EAAkDpB,mBAAS,KAA3D,mBAAOF,EAAP,KAA0BuB,EAA1B,KACA,EAAgCrB,oBAAS,GAAzC,mBAAOD,EAAP,KAAiBuB,EAAjB,KAEA,OACE,sBAAKf,UAAU,MAAf,UACE,oBACEA,UAAU,aACV,UAAQ,QAFV,iCAIoBb,EAAOU,OAJ3B,aAOA,sBAAKG,UAAU,cAAf,UACE,0CAEE,uBACEO,KAAK,SACLS,IAAK,EACLC,IAAK,GACLC,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAOT,GAASS,EAAEC,OAAOH,aAIvC,gDAEE,uBACEX,KAAK,SACLS,IAAK,EACLC,IAAK,GACLC,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAOR,GAAcQ,EAAEC,OAAOH,aAI5C,gDAEE,uBACEX,KAAK,SACLS,IAAK,IACL5B,KAAM,GACN6B,IAAK,IACLC,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAOP,GAAcO,EAAEC,OAAOH,aAI5C,wDAEE,uBACEX,KAAK,SACLS,IAAK,IACLC,IAAK,IACL7B,KAAM,IACN8B,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAON,GAAsBM,EAAEC,OAAOH,aAIpD,wBAAOlB,UAAU,WAAjB,sBAEE,uBACEO,KAAK,WACLe,QAAS9B,EACT2B,SAAU,SAACC,GAAD,OAAOL,EAAYK,EAAEC,OAAOC,kBAK5C,cAAC,EAAD,CACEnC,OAAQA,EACRC,KAAMA,EACNE,UAAWA,EACXD,UAAWA,EACXE,kBAAmBA,EACnBC,SAAUA,QCjFlB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.5f52205d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = (\n  {\n    images, step, itemWidth, frameSize, animationDuration, infinite,\n  },\n) => {\n  const [position, setPosition] = useState(0);\n  const lastPosition = images.length - frameSize;\n\n  const handleNextClick = () => {\n    if (position + step < lastPosition) {\n      setPosition(position + step);\n    } else {\n      setPosition(lastPosition);\n    }\n\n    if (infinite && position === lastPosition) {\n      setPosition(0);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (position - step < 0) {\n      setPosition(0);\n    } else {\n      setPosition(position - step);\n    }\n\n    if (infinite && position === 0) {\n      setPosition(lastPosition);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: `${frameSize * itemWidth}px`,\n      }}\n      className=\"Carousel\"\n    >\n      <ul className=\"Carousel__list\">\n        {images.map(image => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${-position * itemWidth}px)`,\n              transition: `transform ease ${animationDuration / 1000}s`,\n            }}\n          >\n            <img style={{ width: `${itemWidth}px` }} src={image} alt=\"1\" />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"button__prev\"\n          onClick={handlePrevClick}\n          disabled={position === 0 && !infinite}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"button__next\"\n          onClick={handleNextClick}\n          disabled={position === lastPosition && !infinite}\n        >\n          Next\n        </button>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","export const images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { images } from './images';\n\nexport const App = () => {\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1\n        className=\"App__title\"\n        data-cy=\"title\"\n      >\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <div className=\"App__labels\">\n        <label>\n          Step:\n          <input\n            type=\"number\"\n            min={1}\n            max={10}\n            value={step}\n            onChange={(e) => setStep(+e.target.value)}\n          />\n        </label>\n\n        <label>\n          Frame size:\n          <input\n            type=\"number\"\n            min={1}\n            max={10}\n            value={frameSize}\n            onChange={(e) => setFrameSize(+e.target.value)}\n          />\n        </label>\n\n        <label>\n          Item width:\n          <input\n            type=\"number\"\n            min={130}\n            step={10}\n            max={200}\n            value={itemWidth}\n            onChange={(e) => setItemWidth(+e.target.value)}\n          />\n        </label>\n\n        <label>\n          Animation duration:\n          <input\n            type=\"number\"\n            min={1000}\n            max={5000}\n            step={1000}\n            value={animationDuration}\n            onChange={(e) => setAnimationDuration(+e.target.value)}\n          />\n        </label>\n\n        <label className=\"infinite\">\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={(e) => setInfinite(e.target.checked)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}