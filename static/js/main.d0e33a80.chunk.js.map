{"version":3,"sources":["components/Carousel.tsx","images.js","App.tsx","index.tsx"],"names":["Carousel","images","step","itemWidth","frameSize","animationDuration","infinite","useState","position","setPosition","lastPosition","length","useEffect","style","width","className","map","image","transform","transition","src","alt","type","onClick","disabled","initialOptionsState","App","options","setOptions","handleOptionChange","event","target","name","value","checked","prevOptions","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0e33a80.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = (\n  {\n    images, step, itemWidth, frameSize, animationDuration, infinite,\n  },\n) => {\n  const [position, setPosition] = useState(0);\n  const lastPosition = images.length - frameSize;\n\n  useEffect(() => {\n    setPosition(0);\n  }, [frameSize]);\n\n  const handleNextClick = () => {\n    setPosition(position + step < lastPosition\n      ? position + step\n      : lastPosition);\n\n    if (infinite && position === lastPosition) {\n      setPosition(0);\n    }\n  };\n\n  const handlePrevClick = () => {\n    setPosition(position - step < 0 ? 0 : position - step);\n\n    if (infinite && position === 0) {\n      setPosition(lastPosition);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: `${frameSize * itemWidth}px`,\n      }}\n      className=\"Carousel\"\n    >\n      <ul className=\"Carousel__list\">\n        {images.map(image => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${-position * itemWidth}px)`,\n              transition: `transform ease ${animationDuration / 1000}s`,\n            }}\n          >\n            <img style={{ width: `${itemWidth}px` }} src={image} alt=\"1\" />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"button__prev\"\n          onClick={handlePrevClick}\n          disabled={position === 0 && !infinite}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"button__next\"\n          onClick={handleNextClick}\n          disabled={position === lastPosition && !infinite}\n        >\n          Next\n        </button>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","export const images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { images } from './images';\n\nconst initialOptionsState = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport const App = () => {\n  const [options, setOptions] = useState(initialOptionsState);\n\n  const handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, type, checked,\n    } = event.target;\n\n    setOptions(prevOptions => ({\n      ...prevOptions,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  const {\n    step, frameSize, itemWidth, animationDuration, infinite,\n  } = options;\n\n  return (\n    <div className=\"App\">\n      <h1\n        className=\"App__title\"\n        data-cy=\"title\"\n      >\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <div className=\"App__labels\">\n        <label>\n          Step:\n          <input\n            name=\"step\"\n            type=\"number\"\n            min={3}\n            max={10}\n            value={step}\n            onChange={handleOptionChange}\n          />\n        </label>\n\n        <label>\n          Frame size:\n          <input\n            name=\"frameSize\"\n            type=\"number\"\n            min={3}\n            max={10}\n            value={frameSize}\n            onChange={handleOptionChange}\n          />\n        </label>\n\n        <label>\n          Item width:\n          <input\n            name=\"itemWidth\"\n            type=\"number\"\n            min={130}\n            step={10}\n            max={200}\n            value={itemWidth}\n            onChange={handleOptionChange}\n          />\n        </label>\n\n        <label>\n          Animation duration:\n          <input\n            name=\"animationDuration\"\n            type=\"number\"\n            min={1000}\n            max={5000}\n            step={1000}\n            value={animationDuration}\n            onChange={handleOptionChange}\n          />\n        </label>\n\n        <label className=\"infinite\">\n          Infinite:\n          <input\n            name=\"infinite\"\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={handleOptionChange}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}